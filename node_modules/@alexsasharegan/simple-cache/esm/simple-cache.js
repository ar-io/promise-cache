import { CoreCache } from "./core";
/**
 * SimpleCache follows the Cache interface to store values `V` by key `K`.
 *
 * This cache allows writes up to capacity, beyond which least accessed values
 * will be removed.
 */
export function SimpleCache(capacity, typeLabel = { key: "any", value: "any" }) {
    const { clear, entries, get, invalidate, keys, read, remove, size, values, write, } = CoreCache(capacity);
    const cache = {
        clear,
        entries,
        get,
        invalidate,
        keys,
        read,
        remove,
        size,
        values,
        write,
        toString() {
            return `${SimpleCache.name /* makes name refactoring simpler */}<${typeLabel.key}, ${typeLabel.value}> { size: ${size()}, capacity: ${capacity} }`;
        },
        toJSON() {
            return entries();
        },
    };
    return cache;
}
//# sourceMappingURL=simple-cache.js.map